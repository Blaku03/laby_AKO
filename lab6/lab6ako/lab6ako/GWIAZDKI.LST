Microsoft (R) Macro Assembler Version 5.00                  12/18/23 10:04:59
                                                             Page     1-1


       1				; Program gwiazdki.asm 
       2				; Wyœwietlanie znaków * w takt przerwañ
					 zegarowych 
       3				; Uruchomienie w trybie rzeczywistym pr
					ocesora x86 
       4				; lub na maszynie wirtualnej 
       5				; zakoñczenie programu po naciœniêciu k
					lawisza 'x' 
       6				; asemblacja (MASM 4.0): masm gwiazdki.
					asm,,,; 
       7				; konsolidacja (LINK 3.60): link gwiazd
					ki.obj; 
       8				.386 
       9 0000				rozkazy SEGMENT use16 
      10				ASSUME CS:rozkazy 
      11				;======================================
					====================== 
      12				; procedura obs³ugi przerwania zegarowe
					go 
      13 0000				obsluga_zegara PROC 
      14				; przechowanie u¿ywanych rejestrów 
      15 0000  50			push ax 
      16 0001  53			push bx 
      17 0002  06			push es 
      18				; wpisanie adresu pamiêci ekranu do rej
					estru ES - pamiêæ 
      19				; ekranu dla trybu tekstowego zaczyna s
					iê od adresu B8000H, 
      20				; jednak do rejestru ES wpisujemy warto
					œæ B800H, 
      21				; bo w trakcie obliczenia adresu proces
					or ka¿dorazowo mno¿y 
      22				; zawartoœæ rejestru ES przez 16 
      23 0003  B8 B800			mov ax, 0B800h ;adres pamiêci ekranu 
      24 0006  8E C0			mov es, ax 
      25				; zmienna 'licznik' zawiera adres bie¿¹
					cy w pamiêci ekranu 
      26 0008  2E: 8B 1E 0031 R		mov bx, cs:licznik 
      27				; przes³anie do pamiêci ekranu kodu ASC
					II wyœwietlanego znaku 
      28				; i kodu koloru: bia³y na czarnym tle (
					do nastêpnego bajtu) 
      29 000D  26: C6 07 2A		mov byte PTR es:[bx], '*' ; kod ASCII 
      30 0011  26: C6 47 01 07		mov byte PTR es:[bx+1], 00000111B ; kol
					or 
      31				; zwiêkszenie o 2 adresu bie¿¹cego w pa
					miêci ekranu 
      32 0016  83 C3 02			add bx,2 
      33				; sprawdzenie czy adres bie¿¹cy osi¹gn¹
					³ koniec pamiêci ekranu 
      34 0019  81 FB 0FA0		cmp bx,4000 
      35 001D  0F 82 0024 R		jb wysw_dalej ; skok gdy nie koniec ekr
					anu 
      36				; wyzerowanie adresu bie¿¹cego, gdy ca³
Microsoft (R) Macro Assembler Version 5.00                  12/18/23 10:04:59
                                                             Page     1-2


					y ekran zapisany 
      37 0021  BB 0000			mov bx, 0 
      38				;zapisanie adresu bie¿¹cego do zmiennej
					 'licznik' 
      39 0024				wysw_dalej: 
      40 0024  2E: 89 1E 0031 R		mov cs:licznik,bx 
      41				; odtworzenie rejestrów 
      42 0029  07			pop es 
      43 002A  5B			pop bx 
      44 002B  58			pop ax 
      45				; skok do oryginalnej procedury obs³ugi
					 przerwania zegarowego 
      46 002C  2E: FF 2E 0033 R		jmp dword PTR cs:wektor8 
      47				; dane programu ze wzglêdu na specyfikê
					 obs³ugi przerwañ 
      48				; umieszczone s¹ w segmencie kodu 
      49 0031  0140			licznik dw 320 ; wyœwietlanie pocz¹wszy
					 od 2. wiersza 
      50 0033  ????????			wektor8 dd ? 
      51 0037				obsluga_zegara ENDP 
      52				;======================================
					====================== 
      53				; program g³ówny - instalacja i deinsta
					lacja procedury 
      54				; obs³ugi przerwañ 
      55				; ustalenie strony nr 0 dla trybu tekst
					owego 
      56 0037				zacznij: 
      57 0037  B0 00			mov al, 0 
      58 0039  B4 05			mov ah, 5 
      59 003B  CD 0A			int 10 
      60 003D  B8 0000			mov ax, 0 
      61 0040  8E D8			mov ds,ax ; zerowanie rejestru DS 
      62				; odczytanie zawartoœci wektora nr 8 i 
					zapisanie go 
      63				; w zmiennej 'wektor8' (wektor nr 8 zaj
					muje w pamiêci 4 bajty 
      64				; pocz¹wszy od adresu fizycznego 8 * 4 
					= 32) 
      65 0042  66| A1 0020		mov eax,ds:[32] ; adres fizyczny 0*16 +
					 32 = 32 
      66 0046  2E: 66| A3 0033 R	mov cs:wektor8, eax 
      67				; wpisanie do wektora nr 8 adresu proce
					dury 'obsluga_zegara' 
      68 004B  B8 ---- R		mov ax, SEG obsluga_zegara ; czêœæ segm
					entowa adresu 
      69 004E  BB 0000 R		mov bx, OFFSET obsluga_zegara ; offset 
					adresu 
      70 0051  FA			cli ; zablokowanie przerwañ 
      71				; zapisanie adresu procedury do wektora
					 nr 8 
      72 0052  89 1E 0020		mov ds:[32], bx ; OFFSET 
      73 0056  A3 0022			mov ds:[34], ax ; cz. segmentowa 
      74 0059  FB			sti ;odblokowanie przerwañ 
Microsoft (R) Macro Assembler Version 5.00                  12/18/23 10:04:59
                                                             Page     1-3


      75				; oczekiwanie na naciœniêcie klawisza '
					x' 
      76 005A				aktywne_oczekiwanie: 
      77 005A  B4 01			mov ah,1 
      78 005C  CD 16			int 16H 
      79				; funkcja INT 16H (AH=1) BIOSu ustawia 
					ZF=1 jeœli 
      80				; naciœniêto jakiœ klawisz 
      81 005E  74 FA			jz aktywne_oczekiwanie 
      82				; odczytanie kodu ASCII naciœniêtego kl
					awisza (INT 16H, AH=0) 
      83				; do rejestru AL 
      84 0060  B4 00			mov ah, 0 
      85 0062  CD 16			int 16H 
      86 0064  3C 78			cmp al, 'x' ; porównanie z kodem litery
					 'x' 
      87 0066  75 F2			jne aktywne_oczekiwanie ; skok, gdy inn
					y znak 
      88				; deinstalacja procedury obs³ugi przerw
					ania zegarowego 
      89				; odtworzenie oryginalnej zawartoœci we
					ktora nr 8 
      90 0068  2E: 66| A1 0033 R	mov eax, cs:wektor8 
      91 006D  FA			cli 
      92 006E  66| A3 0020		mov ds:[32], eax ; przes³anie wartoœci 
					oryginalnej 
      93				; do wektora 8 w tablicy wektorów 
      94				; przerwañ 
      95 0072  FB			sti 
      96				; zakoñczenie programu 
      97 0073  B0 00			mov al, 0 
      98 0075  B4 4C			mov ah, 4CH 
      99 0077  CD 21			int 21H 
     100 0079				rozkazy ENDS 
     101 0000				nasz_stos SEGMENT stack 
     102 0000  0080[			db 128 dup (?) 
     103	    ??			
     104			 ]	
     105				
     106 0080				nasz_stos ENDS 
     107				END zacznij 
Microsoft (R) Macro Assembler Version 5.00                  12/18/23 10:04:59
                                                             Symbols-1




                N a m e         	Size	Length	 Align	Combine Class

NASZ_STOS  . . . . . . . . . . .  	32 Bit	0080	PARA	STACK	
ROZKAZY  . . . . . . . . . . . .  	16 Bit	0079	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

AKTYWNE_OCZEKIWANIE  . . . . . .  	L NEAR	005A	ROZKAZY

LICZNIK  . . . . . . . . . . . .  	L WORD	0031	ROZKAZY

OBSLUGA_ZEGARA . . . . . . . . .  	N PROC	0000	ROZKAZY	Length = 0037

WEKTOR8  . . . . . . . . . . . .  	L DWORD	0033	ROZKAZY
WYSW_DALEJ . . . . . . . . . . .  	L NEAR	0024	ROZKAZY

ZACZNIJ  . . . . . . . . . . . .  	L NEAR	0037	ROZKAZY

@FILENAME  . . . . . . . . . . .  	TEXT  gwiazdki		


    104 Source  Lines
    104 Total   Lines
     10 Symbols

  50372 + 466172 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
